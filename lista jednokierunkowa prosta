#include <iostream>
#include <stdio.h>
 
using namespace std;
 
struct elem{ //pojemnik na liczby
    int data;    
    elem* next;
    elem() {
        next = 0;
    }  
};
void add_any_position (int data, int position, elem*& list) {
	if (position == 1) { // Jesli jest to pierwszy musimy zaznaczyc ze jest to poczatek listy
		elem* temp = new elem; // Tworzymy obiekt 
		temp->data = data;//Wpisujemy wartosc podana przez uzytkownika
		temp->next = list;	//Nasz wskaznik na kolejny (a raczej poprzedni obiekt) ustawiamy na nasza liste bo jest to pierwszy obiekt)
		list = temp;	// nasza lista pokazuje na pierwszy jej obiekt wyzej utworzony
	} else if (position > 1) {
		elem* temp = new elem;
		temp->data = data;
		elem* prev = list;//tworzymy pomocniczy wskaznik ktory bedzie szukal miejsca gdzie wlozyc nasz nowy obiekt
		int counter = 1;//licznik zeby sprawdzac gdzie mamy wlozyc obiekt
		while (counter != (position-1)) {//pozycja-1 bo wstawiamy nasz obiekt przed ten istniejacy juz zeby go przesunac do przodu
			counter++;
			prev = prev->next;//przechodzimy po kolejnych obiektach
			if (prev == NULL) {// jesli uzytykownik wpisze pozycje gdzies za lista to musimy to obsuzyc
				cout << "Lista za krotka";
				return;//sam return pozwala wyjsc z metody w dowolnej chwili
			}
		}
		temp->next = prev->next;//nasz nowo utworzony obiekt musi pokazywac na jego poprzednika
		prev->next = temp;// a ten obiekt ktory byl na tym miejscu musi pokazywac na ten "wepchniety" obiekt
		//CYKLICZNOSC
		if(prev->next == NULL){//jesli po wepchnieciu po prawej stronie nie ma obiektu...
			temp->next = list;//...to ten nasz nowo dodany obiekt ma pokazywac na pierwszy obiekt listy
		}
	} else {
		cout << "Bledne dane";
	}
			
}

void showw (elem* list) {
    	elem* temp = list;
    	while (temp != NULL) {
    		cout << "Liczba: " << temp->data << endl;
			temp = temp->next; // przechodzimy po kolejnych wskaznikach pokazujacych na kolejne obiekty	
		}
}
struct list {
    elem* first; //pierwsza liczba
   
    void add (int data){
        elem* neww = new elem;//tworzenie elemetu
        neww->data = data;//wpisujemy nasza liczbe podana od uzytkownika
        if (first == 0) {
            first = neww;   //jesli jest to pierwsza liczba to musimy to zaznaczyc w naszej liscie     
        } else {
            elem* temp = first; // szukamy konca
            while (temp->next != NULL) {
                temp = temp->next; //skaczemy po wskaznikach wszystkich obiektow
            }  
            temp->next = neww; //ostatni pokazuje ten nasz nowo dodany
            neww->next = 0;  //musimy ustawic ten nowo dodany zeby nie wskazywal na nic
        }          
    }
   
    void dell (int nr){
        //Jesli usuwamy pierwszy element to pierwsza ma zniknac i druga ma sie stac pierwsza stad zmieniam wskaznik poczatku listy
        if (nr == 1) {
            elem* temp = first;
            first = temp->next;
        }
        //Jesli nie jest to pierwszy element to szukamy najpierw wskaznika na osobe 1 mniejsza od szukanej
        if (nr>=2) {
            int j = 1;
            elem* temp = first;
            while (temp != NULL) {
                if ((j+1) == nr) {
                    break;
                }//sprawdzamy czy mamy juz wskaznik na osobie 1 mniejsza jak nie to przewijamy az znajdziemy
                j++;
                temp=temp->next;   
            }
            //sprawdzamy jeszcze czy czasem nie jest to ostatni element bo jesli tak to zerujemy go
            if (temp->next->next == 0) {
                temp->next = 0;
            } else {
                temp->next = temp->next->next;
            }
                   
        }      
    }
   
    /*Pokazywanie przebiega w ten sposob:
    cout << numbers->first->data << endl;
    cout << numbers->first->next->data << endl; i tak dalej*/
    void show () {
        elem* temp = first;
        while (temp != NULL) {
            cout << "Liczba: " << temp->data << endl;
            temp = temp->next; // przechodzimy po kolejnych wskaznikach pokazujacych na kolejne obiekty
        }
    }
   
    list() {
        first = 0; 
    }
};
 
int main()
{
    list* numbers = new list; //tworze liste
    numbers->add(2);
    numbers->add(3);
    numbers->show();
    numbers->dell(2);
    numbers->show();
    delete (numbers);
    return 0;  
}
